version: '3.1'
services:
  pg_db:
    image: postgres:latest
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=100MB"
      - "-c"
      - "effective_cache_size=100MB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=100MB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      - POSTGRES_PASSWORD=
      - POSTGRES_USER=contract
      - POSTGRES_DB=contract
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_contract_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contract -d contract"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # django:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: daphne -b 0.0.0.0 -p 8000 contract.asgi
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - main
  #   restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=contract
      - RABBITMQ_DEFAULT_PASS=
    ports:
      - 15672:15672
      - 5673:5672

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - /home/redis/d–∞ta2:/root/redis
      - /home/redis/redis2.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=3
#  openvpn:
#    image: kylemanna/openvpn:latest
#    container_name: openvpn
#    command: openvpn --config ./openvpn.conf
#    ports:
#      - "1194:1194/udp"
#    volumes:
#     - ./openvpn.conf:/etc/openvpn/openvpn.conf
#      - ./cert/users:/etc/openvpn/certs
#    restart: always

volumes:
  pg_contract_data:

networks:
  main:
    name: external-contract-main
